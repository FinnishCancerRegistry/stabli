% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat_table_list.R
\name{stat_table_list}
\alias{stat_table_list}
\alias{as.stat_table_list}
\alias{as.stat_table_list.stat_table_list}
\alias{as.stat_table_list.list}
\alias{stat_table_list_set}
\alias{stat_table_list_assert}
\alias{[.stat_table_list}
\alias{print.stat_table_list}
\alias{c.stat_table_list}
\title{List of Statistics Tables}
\usage{
stat_table_list(x, meta = NULL)

as.stat_table_list(x, meta)

\method{as.stat_table_list}{stat_table_list}(x, meta = NULL)

\method{as.stat_table_list}{list}(x, meta = NULL)

stat_table_list_set(x, meta = NULL)

stat_table_list_assert(x, x_nm = NULL, call = NULL, assertion_type = NULL)

\method{[}{stat_table_list}(x, i, ...)

\method{print}{stat_table_list}(x, ...)

\method{c}{stat_table_list}(...)
}
\arguments{
\item{x}{\verb{[list]} (no default)

A named \code{list} of \code{stat_table} objects.}

\item{meta}{\verb{[NULL, list]} (no default)

List of metadata as accepted by \code{stabli::stat_table_list_meta_assert}.
\itemize{
\item \code{NULL}: No metadata.
\item \code{list}: See what \code{stabli::stat_table_list_meta_assert} specifies.
}}

\item{x_nm}{See \verb{[dbc::handle_args_inplace]}.}

\item{call}{See \verb{[dbc::handle_args_inplace]}.}

\item{assertion_type}{See \verb{[dbc::handle_args_inplace]}.}

\item{i}{passed to next method, see \code{? "["}.}

\item{...}{passed to next method, see \code{? "["}.}
}
\description{
A convenient list of \code{stat_table} objects.
}
\section{Functions}{

\strong{stabli::stat_table_list}

Create a \code{stat_table_list} object by taking a copy.


\strong{stabli::print.stat_table_list}

\code{print} method for class \code{stat_table_list}. Performs the following steps:
\itemize{
\item Prints length of the \code{stat_table_list} object.
\item Prints a \code{data.table} containing
\itemize{
\item \code{name}: The name of the table from \code{names(x)}.
\item Every column of \code{stabli::stat_table_list_meta_get(x)[["meta_dt"]]}
if it exists.
\item \code{dim}: Number of rows and columns.
\item Every element of the metadata of the corresponding \code{stat_table}.
}
\item Additional arguments are passed via \code{...} to \code{print.data.table}.
}


\strong{stabli::c.stat_table_list}

Collect method for \code{stat_table_list} objects. Performs the following steps:
\itemize{
\item Turn data collected via \code{list(...)} into normal lists.
\item Collect metadata from each element of \code{list(...)} into one big list of
metadata. \code{meta_dt} are combined with \code{data.table::rbindlist}. Other
elements are combined with \code{c} and a call to \code{unique} to drop duplicates.
\item Call \code{stabli::stat_table_list_set} using collected data and metadata.
\item Return the result, a long \code{stat_table_list}.
}
}

\section{News for version 0.4.1}{


\code{stabli::print.stat_table_list} bug related to adding \code{stat_table}
metadata into the printed table fixed.
}

\examples{

# stabli::stat_table_list

st1 <- stabli::stat_table(
  data.table::data.table(a = 1:3, v = 3:1),
  list(
    stratum_col_nms = "a",
    value_col_nms = "v"
  )
)
st2 <- stabli::stat_table(
  data.table::data.table(b = 1:3, v = 3:1),
  list(
    stratum_col_nms = "b",
    value_col_nms = "v"
  )
)
stl <- stabli::stat_table_list(
  list(tab1 = st1, tab2 = st2),
  list(meta_dt = data.table::data.table(stat_fun_nm = c("fun1", "fun1")))
)


# "[.stat_table_list"
stl <- stabli::stat_table_list(
  list(
    tab1 = stabli::stat_table(
      data.table::data.table(a = 1:3, v = 3:1),
      list(
        stratum_col_nms = "a",
        value_col_nms = "v"
      )
    ),
    tab2 = stabli::stat_table(
      data.table::data.table(a = 1:3, v = 3:1),
      list(
        stratum_col_nms = "a",
        value_col_nms = "v"
      )
    )
  )
)
stl_1 <- stl[1]
stopifnot(
  inherits(stl_1, "stat_table_list"),
  length(stl_1) == 1,
  identical(stl_1[[1]], stl[[1]])
)

# c.stat_table_list
stl_1 <- stabli::stat_table_list(
  list(
    tab1 = stabli::stat_table(
      data.table::data.table(a = 1:3, v = 3:1),
      list(
        stratum_col_nms = "a",
        value_col_nms = "v"
      )
    ),
    tab2 = stabli::stat_table(
      data.table::data.table(a = 1:3, v = 3:1),
      list(
        stratum_col_nms = "a",
        value_col_nms = "v"
      )
    )
  )
)
stl_2 <- stabli::stat_table_list(
  list(
    tab3 = stabli::stat_table(
      data.table::data.table(a = 1:3, v = 3:1),
      list(
        stratum_col_nms = "a",
        value_col_nms = "v"
      )
    ),
    tab4 = stabli::stat_table(
      data.table::data.table(a = 1:3, v = 3:1),
      list(
        stratum_col_nms = "a",
        value_col_nms = "v"
      )
    )
  )
)
big_stl <- c(stl_1, stl_2)
stabli::stat_table_list_assert(big_stl)
}
